{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carso\\\\OneDrive\\\\Desktop\\\\Projects\\\\Stock-Analyzer\\\\frontend\\\\src\\\\Stock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport \"./Stock.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from \"chart.js\";\nimport \"chartjs-adapter-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst timePeriods = [\"1d\", \"5d\", \"1m\", \"6m\", \"1y\", \"5y\", \"max\"];\nconst analysisOptions = [\"Simple Moving Average\", \"Exponential Moving Average\", \"Relative Strength Index\", \"Bollinger Bands\", \"MACD\", \"Stochastic Oscillator\", \"Fibonacci Retracement\"];\nconst Stock = ({\n  selectedStock,\n  onClose,\n  onFavoriteAdded,\n  favorites\n}) => {\n  _s();\n  const [stockInfo, setStockInfo] = useState({\n    high: 0,\n    low: 0,\n    current: 0\n  });\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState(\"1m\");\n  const [tickerData, setTickerData] = useState([]);\n  const [prediction, setPrediction] = useState(\"\"); // State for overall prediction\n  const [taPrediction, setTAPrediction] = useState(\"\"); // State for Technical Analysis Prediction\n  const [isFavorite, setIsFavorite] = useState(favorites.includes(selectedStock));\n  const [stockData, setStockData] = useState({\n    labels: [],\n    datasets: [{\n      label: `${selectedStock} Stock Price`,\n      data: [],\n      borderColor: \"rgba(75,192,192,1)\",\n      backgroundColor: \"rgba(75,192,192,0.5)\",\n      fill: false,\n      pointRadius: 3,\n      pointBackgroundColor: \"black\"\n    }]\n  });\n  const closeStock = () => {\n    if (onClose) {\n      onClose();\n    }\n  };\n  const handleMLPrediction = async () => {\n    if (selectedStock !== \"TSLA\") {\n      alert(\"ML prediction is only available for TSLA stock.\");\n      return;\n    }\n\n    // Ensure there is data for making predictions\n    if (stockData.datasets[0].data.length === 0) {\n      alert(\"No data available for prediction.\");\n      return;\n    }\n\n    // Extract the last day's data\n    const lastDayData = stockData.datasets[0].data[stockData.datasets[0].data.length - 1];\n\n    // Verify that lastDayData has all necessary fields\n    if (!lastDayData || !lastDayData.open || !lastDayData.high || !lastDayData.low || !lastDayData.volume) {\n      alert(\"Incomplete data for prediction.\");\n      return;\n    }\n\n    // Construct features object with required data\n    const features = {\n      Open: lastDayData.open,\n      High: lastDayData.high,\n      Low: lastDayData.low,\n      Volume: lastDayData.volume\n    };\n    try {\n      const response = await axios.post(\"http://localhost:3001/predict\", {\n        features,\n        stockSymbol: selectedStock\n      });\n      console.log(\"Received prediction response:\", response);\n\n      // Splitting the response to extract the prediction value\n      const predictionValue = parseFloat(response.data.prediction.split(\"\\n\").pop()).toFixed(2);\n      const currentPrice = lastDayData.close;\n      const sentimentThreshold = 1.0; // Define a threshold for sentiment analysis\n\n      let sentiment;\n      if (predictionValue > currentPrice + sentimentThreshold) {\n        sentiment = \"Bullish\";\n      } else if (predictionValue < currentPrice - sentimentThreshold) {\n        sentiment = \"Bearish\";\n      } else {\n        sentiment = \"Neutral\";\n      }\n      setPrediction(`${predictionValue} (${sentiment})`);\n    } catch (error) {\n      console.error(\"Error fetching ML prediction:\", error);\n      alert(\"Failed to fetch prediction\");\n    }\n  };\n  const handleToggleFavorite = async () => {\n    const userId = localStorage.getItem(\"userId\");\n    try {\n      if (isFavorite) {\n        // If it's already a favorite, send a DELETE request to remove it\n        await axios.delete(`http://localhost:3001/user/${userId}/favorites`, {\n          data: {\n            stockSymbol: selectedStock\n          }\n        });\n      } else {\n        // If it's not a favorite, send a POST request to add it\n        await axios.post(`http://localhost:3001/user/${userId}/favorites`, {\n          stockSymbol: selectedStock\n        });\n      }\n      setIsFavorite(!isFavorite); // Toggle local favorite state\n      if (onFavoriteAdded) {\n        onFavoriteAdded(); // Trigger re-fetching of favorites in parent component\n      }\n    } catch (error) {\n      console.error(\"Error updating favorites:\", error);\n    }\n  };\n  const handleFavorite = async () => {\n    const userId = localStorage.getItem(\"userId\");\n    try {\n      await axios.post(`http://localhost:3001/user/${userId}/favorites`, {\n        stockSymbol: selectedStock\n      });\n      console.log(\"Added to favorites\");\n      if (onFavoriteAdded) {\n        onFavoriteAdded(); // Invoke the callback when the favorite is added successfully\n      }\n    } catch (error) {\n      console.error(\"Error adding to favorites:\", error);\n    }\n  };\n  const calculatePrediction = async () => {\n    let weightedScore = 0;\n    const weights = {\n      \"Simple Moving Average\": 1.1,\n      \"Exponential Moving Average\": 1.3,\n      \"Relative Strength Index\": 1.5,\n      \"Bollinger Bands\": 1.2,\n      MACD: 1.4,\n      \"Stochastic Oscillator\": 1.2,\n      \"Fibonacci Retracement\": 1.0\n    };\n    const threshold = 3; // Define threshold for buy/sell decision\n\n    try {\n      for (const analysisType of analysisOptions) {\n        const trend = await handleAnalysisOptionClick(analysisType, false);\n        const weight = weights[analysisType];\n        if (trend.toLowerCase() === \"bullish\") {\n          weightedScore += weight;\n        } else if (trend.toLowerCase() === \"bearish\") {\n          weightedScore -= weight;\n        }\n        // Neutral trends do not affect the score\n      }\n      let decision = \"Hold Stock\"; // Default decision\n      if (weightedScore >= threshold) {\n        decision = \"Buy Stock\";\n      } else if (weightedScore <= -threshold) {\n        decision = \"Sell Stock\";\n      }\n      setTAPrediction(decision); // Update TA prediction state\n    } catch (error) {\n      setTAPrediction(\"Error in prediction\");\n    }\n  };\n  useEffect(() => {\n    const fetchTickerData = async () => {\n      const apiKey = \"pk_fa779df6b79c4e499e1d7114377e9684\";\n      const symbols = \"AAPL,MSFT,AMZN,GOOGL,FB,BABA,TSLA,V,JPM,JNJ,BRK.A,XOM,BAC,PG,WMT,DIS,VZ,PFE,CVX,KO,PEP,CSCO,MRK,INTC,CMCSA\";\n      const url = `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${symbols}&types=quote,previous&token=${apiKey}`;\n      try {\n        const response = await axios.get(url);\n      } catch (error) {\n        console.error(\"Error fetching ticker data: \", error);\n      }\n    };\n    fetchTickerData();\n  }, []);\n  useEffect(() => {\n    const apiKey = \"pk_fa779df6b79c4e499e1d7114377e9684\";\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/${selectedTimePeriod}?token=${apiKey}`;\n    axios.get(url).then(response => {\n      if (response.data.length > 0) {\n        const chartData = response.data.map(dayData => ({\n          x: dayData.date,\n          // Assuming 'date' is the correct field\n          y: dayData.close // Assuming 'close' price for chart\n        }));\n        setStockData({\n          labels: chartData.map(data => data.x),\n          datasets: [{\n            ...stockData.datasets[0],\n            // Keep existing dataset settings\n            data: chartData\n          }]\n        });\n        const lastDayData = response.data[response.data.length - 1];\n        setStockInfo({\n          high: lastDayData.high,\n          low: lastDayData.low,\n          current: lastDayData.close\n        });\n      }\n    }).catch(error => {\n      console.error(\"Error fetching stock time series data:\", error);\n    });\n  }, [selectedStock, selectedTimePeriod]);\n  const parseChartData = data => {\n    const chartData = {\n      labels: [],\n      datasets: [{\n        label: `${selectedStock} Stock Price`,\n        data: [],\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false\n      }]\n    };\n    data.forEach(dayData => {\n      chartData.labels.push(dayData.date);\n      chartData.datasets[0].data.push({\n        close: dayData.close,\n        open: dayData.open,\n        high: dayData.high,\n        low: dayData.low,\n        volume: dayData.volume // Assuming 'volume' is available in dayData\n      });\n    });\n    return chartData;\n  };\n  const options = {\n    scales: {\n      x: {\n        type: \"time\",\n        time: {\n          unit: \"day\"\n        }\n      },\n      y: {\n        beginAtZero: true\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  const handleAnalysisOptionClick = async (analysisType, showAlert = true) => {\n    try {\n      let url = \"\";\n      switch (analysisType) {\n        case \"Simple Moving Average\":\n          url = `http://localhost:3001/sma/${selectedStock}/${selectedTimePeriod}`;\n          break;\n        case \"Exponential Moving Average\":\n          url = `http://localhost:3001/ema/${selectedStock}/${selectedTimePeriod}`;\n          break;\n        case \"Relative Strength Index\":\n          url = `http://localhost:3001/rsi/${selectedStock}/${selectedTimePeriod}`;\n          break;\n        case \"Bollinger Bands\":\n          url = `http://localhost:3001/bollinger-bands/${selectedStock}/${selectedTimePeriod}`;\n          break;\n        case \"MACD\":\n          url = `http://localhost:3001/macd/${selectedStock}/${selectedTimePeriod}`;\n          break;\n        case \"Stochastic Oscillator\":\n          url = `http://localhost:3001/stochastic/${selectedStock}/${selectedTimePeriod}`;\n          break;\n        case \"Fibonacci Retracement\":\n          url = `http://localhost:3001/fibonacci/${selectedStock}/${selectedTimePeriod}`;\n          break;\n        default:\n          console.error(\"Unrecognized analysis type:\", analysisType);\n          return \"error\";\n      }\n      const response = await axios.get(url);\n      console.log(`Trend for ${analysisType}:`, response.data.trend); // Log the trend\n\n      if (showAlert) {\n        alert(`Trend for ${analysisType}: ${response.data.trend}`);\n      }\n      return response.data.trend;\n    } catch (error) {\n      console.error(\"Error performing analysis for\", analysisType, \":\", error);\n      return \"error\"; // Return a default value in case of an error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `stock-container ${selectedStock ? \"stock-container-animate\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleToggleFavorite,\n      style: {\n        cursor: \"pointer\",\n        fontSize: \"24px\"\n      },\n      children: isFavorite ? \"★\" : \"☆\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-ticker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-periods\",\n      children: timePeriods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTimePeriod(period),\n        children: period.toUpperCase()\n      }, period, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Definitions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bullish:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), \" Buy Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bearish:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), \" Sell Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Neutral:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), \" Hold Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ML:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), \" Machine Learning\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"TA:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), \" Technical Analysis\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"600px\",\n          height: \"300px\",\n          marginLeft: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [selectedStock, \" Stock Chart\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), stockData.datasets[0].data.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n          data: stockData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"High:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), \" \", stockInfo.high]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Low:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), \" \", stockInfo.low]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), \" \", stockInfo.current]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ML Prediction:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), \" \", prediction]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"TA Prediction:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), \" \", taPrediction]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"80px\",\n        gap: \"10px\"\n      },\n      children: analysisOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnalysisOptionClick(option),\n        style: {\n          padding: \"10px 20px\"\n        },\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculatePrediction,\n        children: \"Calculate Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMLPrediction,\n        children: \"ML Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n};\n_s(Stock, \"i0/yqhNXs1lU3yAmO95iHKXYwis=\");\n_c = Stock;\nexport default Stock;\nvar _c;\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","timePeriods","analysisOptions","Stock","selectedStock","onClose","onFavoriteAdded","favorites","_s","stockInfo","setStockInfo","high","low","current","selectedTimePeriod","setSelectedTimePeriod","tickerData","setTickerData","prediction","setPrediction","taPrediction","setTAPrediction","isFavorite","setIsFavorite","includes","stockData","setStockData","labels","datasets","label","data","borderColor","backgroundColor","fill","pointRadius","pointBackgroundColor","closeStock","handleMLPrediction","alert","length","lastDayData","open","volume","features","Open","High","Low","Volume","response","post","stockSymbol","console","log","predictionValue","parseFloat","split","pop","toFixed","currentPrice","close","sentimentThreshold","sentiment","error","handleToggleFavorite","userId","localStorage","getItem","delete","handleFavorite","calculatePrediction","weightedScore","weights","MACD","threshold","analysisType","trend","handleAnalysisOptionClick","weight","toLowerCase","decision","fetchTickerData","apiKey","symbols","url","get","then","chartData","map","dayData","x","date","y","catch","parseChartData","forEach","push","options","scales","type","time","unit","beginAtZero","responsive","maintainAspectRatio","showAlert","className","children","onClick","style","cursor","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","period","toUpperCase","display","justifyContent","alignItems","width","height","marginLeft","textAlign","marginTop","gap","option","index","padding","_c","$RefreshReg$"],"sources":["C:/Users/carso/OneDrive/Desktop/Projects/Stock-Analyzer/frontend/src/Stock.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./Stock.css\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale,\r\n} from \"chart.js\";\r\nimport \"chartjs-adapter-moment\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale\r\n);\r\n\r\nconst timePeriods = [\"1d\", \"5d\", \"1m\", \"6m\", \"1y\", \"5y\", \"max\"];\r\nconst analysisOptions = [\r\n  \"Simple Moving Average\",\r\n  \"Exponential Moving Average\",\r\n  \"Relative Strength Index\",\r\n  \"Bollinger Bands\",\r\n  \"MACD\",\r\n  \"Stochastic Oscillator\",\r\n  \"Fibonacci Retracement\",\r\n];\r\n\r\nconst Stock = ({ selectedStock, onClose, onFavoriteAdded, favorites }) => {\r\n  const [stockInfo, setStockInfo] = useState({ high: 0, low: 0, current: 0 });\r\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState(\"1m\");\r\n  const [tickerData, setTickerData] = useState([]);\r\n  const [prediction, setPrediction] = useState(\"\"); // State for overall prediction\r\n  const [taPrediction, setTAPrediction] = useState(\"\"); // State for Technical Analysis Prediction\r\n  const [isFavorite, setIsFavorite] = useState(\r\n    favorites.includes(selectedStock)\r\n  );\r\n  const [stockData, setStockData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: `${selectedStock} Stock Price`,\r\n        data: [],\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        backgroundColor: \"rgba(75,192,192,0.5)\",\r\n        fill: false,\r\n        pointRadius: 3,\r\n        pointBackgroundColor: \"black\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const closeStock = () => {\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleMLPrediction = async () => {\r\n    if (selectedStock !== \"TSLA\") {\r\n      alert(\"ML prediction is only available for TSLA stock.\");\r\n      return;\r\n    }\r\n\r\n    // Ensure there is data for making predictions\r\n    if (stockData.datasets[0].data.length === 0) {\r\n      alert(\"No data available for prediction.\");\r\n      return;\r\n    }\r\n\r\n    // Extract the last day's data\r\n    const lastDayData =\r\n      stockData.datasets[0].data[stockData.datasets[0].data.length - 1];\r\n\r\n    // Verify that lastDayData has all necessary fields\r\n    if (\r\n      !lastDayData ||\r\n      !lastDayData.open ||\r\n      !lastDayData.high ||\r\n      !lastDayData.low ||\r\n      !lastDayData.volume\r\n    ) {\r\n      alert(\"Incomplete data for prediction.\");\r\n      return;\r\n    }\r\n\r\n    // Construct features object with required data\r\n    const features = {\r\n      Open: lastDayData.open,\r\n      High: lastDayData.high,\r\n      Low: lastDayData.low,\r\n      Volume: lastDayData.volume,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/predict\", {\r\n        features,\r\n        stockSymbol: selectedStock,\r\n      });\r\n\r\n      console.log(\"Received prediction response:\", response);\r\n\r\n      // Splitting the response to extract the prediction value\r\n      const predictionValue = parseFloat(\r\n        response.data.prediction.split(\"\\n\").pop()\r\n      ).toFixed(2);\r\n      const currentPrice = lastDayData.close;\r\n      const sentimentThreshold = 1.0; // Define a threshold for sentiment analysis\r\n\r\n      let sentiment;\r\n      if (predictionValue > currentPrice + sentimentThreshold) {\r\n        sentiment = \"Bullish\";\r\n      } else if (predictionValue < currentPrice - sentimentThreshold) {\r\n        sentiment = \"Bearish\";\r\n      } else {\r\n        sentiment = \"Neutral\";\r\n      }\r\n\r\n      setPrediction(`${predictionValue} (${sentiment})`);\r\n    } catch (error) {\r\n      console.error(\"Error fetching ML prediction:\", error);\r\n      alert(\"Failed to fetch prediction\");\r\n    }\r\n  };\r\n\r\n  const handleToggleFavorite = async () => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    try {\r\n      if (isFavorite) {\r\n        // If it's already a favorite, send a DELETE request to remove it\r\n        await axios.delete(`http://localhost:3001/user/${userId}/favorites`, {\r\n          data: { stockSymbol: selectedStock },\r\n        });\r\n      } else {\r\n        // If it's not a favorite, send a POST request to add it\r\n        await axios.post(`http://localhost:3001/user/${userId}/favorites`, {\r\n          stockSymbol: selectedStock,\r\n        });\r\n      }\r\n      setIsFavorite(!isFavorite); // Toggle local favorite state\r\n      if (onFavoriteAdded) {\r\n        onFavoriteAdded(); // Trigger re-fetching of favorites in parent component\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating favorites:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFavorite = async () => {\r\n    const userId = localStorage.getItem(\"userId\");\r\n    try {\r\n      await axios.post(`http://localhost:3001/user/${userId}/favorites`, {\r\n        stockSymbol: selectedStock,\r\n      });\r\n      console.log(\"Added to favorites\");\r\n      if (onFavoriteAdded) {\r\n        onFavoriteAdded(); // Invoke the callback when the favorite is added successfully\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding to favorites:\", error);\r\n    }\r\n  };\r\n\r\n  const calculatePrediction = async () => {\r\n    let weightedScore = 0;\r\n    const weights = {\r\n      \"Simple Moving Average\": 1.1,\r\n      \"Exponential Moving Average\": 1.3,\r\n      \"Relative Strength Index\": 1.5,\r\n      \"Bollinger Bands\": 1.2,\r\n      MACD: 1.4,\r\n      \"Stochastic Oscillator\": 1.2,\r\n      \"Fibonacci Retracement\": 1.0,\r\n    };\r\n    const threshold = 3; // Define threshold for buy/sell decision\r\n\r\n    try {\r\n      for (const analysisType of analysisOptions) {\r\n        const trend = await handleAnalysisOptionClick(analysisType, false);\r\n        const weight = weights[analysisType];\r\n\r\n        if (trend.toLowerCase() === \"bullish\") {\r\n          weightedScore += weight;\r\n        } else if (trend.toLowerCase() === \"bearish\") {\r\n          weightedScore -= weight;\r\n        }\r\n        // Neutral trends do not affect the score\r\n      }\r\n\r\n      let decision = \"Hold Stock\"; // Default decision\r\n      if (weightedScore >= threshold) {\r\n        decision = \"Buy Stock\";\r\n      } else if (weightedScore <= -threshold) {\r\n        decision = \"Sell Stock\";\r\n      }\r\n\r\n      setTAPrediction(decision); // Update TA prediction state\r\n    } catch (error) {\r\n      setTAPrediction(\"Error in prediction\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTickerData = async () => {\r\n      const apiKey = \"pk_fa779df6b79c4e499e1d7114377e9684\";\r\n      const symbols =\r\n        \"AAPL,MSFT,AMZN,GOOGL,FB,BABA,TSLA,V,JPM,JNJ,BRK.A,XOM,BAC,PG,WMT,DIS,VZ,PFE,CVX,KO,PEP,CSCO,MRK,INTC,CMCSA\";\r\n      const url = `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${symbols}&types=quote,previous&token=${apiKey}`;\r\n\r\n      try {\r\n        const response = await axios.get(url);\r\n      } catch (error) {\r\n        console.error(\"Error fetching ticker data: \", error);\r\n      }\r\n    };\r\n\r\n    fetchTickerData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const apiKey = \"pk_fa779df6b79c4e499e1d7114377e9684\";\r\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/${selectedTimePeriod}?token=${apiKey}`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        if (response.data.length > 0) {\r\n          const chartData = response.data.map((dayData) => ({\r\n            x: dayData.date, // Assuming 'date' is the correct field\r\n            y: dayData.close, // Assuming 'close' price for chart\r\n          }));\r\n\r\n          setStockData({\r\n            labels: chartData.map((data) => data.x),\r\n            datasets: [\r\n              {\r\n                ...stockData.datasets[0], // Keep existing dataset settings\r\n                data: chartData,\r\n              },\r\n            ],\r\n          });\r\n\r\n          const lastDayData = response.data[response.data.length - 1];\r\n          setStockInfo({\r\n            high: lastDayData.high,\r\n            low: lastDayData.low,\r\n            current: lastDayData.close,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching stock time series data:\", error);\r\n      });\r\n  }, [selectedStock, selectedTimePeriod]);\r\n\r\n  const parseChartData = (data) => {\r\n    const chartData = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: `${selectedStock} Stock Price`,\r\n          data: [],\r\n          borderColor: \"rgba(75,192,192,1)\",\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n\r\n    data.forEach((dayData) => {\r\n      chartData.labels.push(dayData.date);\r\n      chartData.datasets[0].data.push({\r\n        close: dayData.close,\r\n        open: dayData.open,\r\n        high: dayData.high,\r\n        low: dayData.low,\r\n        volume: dayData.volume, // Assuming 'volume' is available in dayData\r\n      });\r\n    });\r\n\r\n    return chartData;\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: \"time\",\r\n        time: {\r\n          unit: \"day\",\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const handleAnalysisOptionClick = async (analysisType, showAlert = true) => {\r\n    try {\r\n      let url = \"\";\r\n      switch (analysisType) {\r\n        case \"Simple Moving Average\":\r\n          url = `http://localhost:3001/sma/${selectedStock}/${selectedTimePeriod}`;\r\n          break;\r\n        case \"Exponential Moving Average\":\r\n          url = `http://localhost:3001/ema/${selectedStock}/${selectedTimePeriod}`;\r\n          break;\r\n        case \"Relative Strength Index\":\r\n          url = `http://localhost:3001/rsi/${selectedStock}/${selectedTimePeriod}`;\r\n          break;\r\n        case \"Bollinger Bands\":\r\n          url = `http://localhost:3001/bollinger-bands/${selectedStock}/${selectedTimePeriod}`;\r\n          break;\r\n        case \"MACD\":\r\n          url = `http://localhost:3001/macd/${selectedStock}/${selectedTimePeriod}`;\r\n          break;\r\n        case \"Stochastic Oscillator\":\r\n          url = `http://localhost:3001/stochastic/${selectedStock}/${selectedTimePeriod}`;\r\n          break;\r\n        case \"Fibonacci Retracement\":\r\n          url = `http://localhost:3001/fibonacci/${selectedStock}/${selectedTimePeriod}`;\r\n          break;\r\n        default:\r\n          console.error(\"Unrecognized analysis type:\", analysisType);\r\n          return \"error\";\r\n      }\r\n\r\n      const response = await axios.get(url);\r\n      console.log(`Trend for ${analysisType}:`, response.data.trend); // Log the trend\r\n\r\n      if (showAlert) {\r\n        alert(`Trend for ${analysisType}: ${response.data.trend}`);\r\n      }\r\n      return response.data.trend;\r\n    } catch (error) {\r\n      console.error(\"Error performing analysis for\", analysisType, \":\", error);\r\n      return \"error\"; // Return a default value in case of an error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`stock-container ${\r\n        selectedStock ? \"stock-container-animate\" : \"\"\r\n      }`}\r\n    >\r\n      <span\r\n        onClick={handleToggleFavorite}\r\n        style={{ cursor: \"pointer\", fontSize: \"24px\" }}\r\n      >\r\n        {isFavorite ? \"★\" : \"☆\"}\r\n      </span>\r\n      <div className=\"stock-ticker\">{/* Ticker data display logic here */}</div>\r\n      <div className=\"time-periods\">\r\n        {timePeriods.map((period) => (\r\n          <button key={period} onClick={() => setSelectedTimePeriod(period)}>\r\n            {period.toUpperCase()}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-start\",\r\n        }}\r\n      >\r\n        <div>\r\n          <p>\r\n            <strong>Definitions</strong>\r\n          </p>\r\n          <p>\r\n            <strong>Bullish:</strong> Buy Stock\r\n          </p>\r\n          <p>\r\n            <strong>Bearish:</strong> Sell Stock\r\n          </p>\r\n          <p>\r\n            <strong>Neutral:</strong> Hold Stock\r\n          </p>\r\n          <p>\r\n            <strong>ML:</strong> Machine Learning\r\n          </p>\r\n          <p>\r\n            <strong>TA:</strong> Technical Analysis\r\n          </p>\r\n        </div>\r\n        <div style={{ width: \"600px\", height: \"300px\", marginLeft: \"20px\" }}>\r\n          <h2 style={{ textAlign: \"center\" }}>{selectedStock} Stock Chart</h2>\r\n          {stockData.datasets[0].data.length > 0 && (\r\n            <Line data={stockData} options={options} />\r\n          )}\r\n        </div>\r\n        <div style={{ marginLeft: \"20px\" }}>\r\n          <p>\r\n            <strong>High:</strong> {stockInfo.high}\r\n          </p>\r\n          <p>\r\n            <strong>Low:</strong> {stockInfo.low}\r\n          </p>\r\n          <p>\r\n            <strong>Current:</strong> {stockInfo.current}\r\n          </p>\r\n          <p>\r\n            <strong>ML Prediction:</strong> {prediction}\r\n          </p>\r\n          <p>\r\n            <strong>TA Prediction:</strong> {taPrediction}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          marginTop: \"80px\",\r\n          gap: \"10px\",\r\n        }}\r\n      >\r\n        {analysisOptions.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleAnalysisOptionClick(option)}\r\n            style={{ padding: \"10px 20px\" }}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"10px\" }}>\r\n        <button onClick={calculatePrediction}>Calculate Prediction</button>\r\n        <button onClick={handleMLPrediction}>ML Prediction</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}