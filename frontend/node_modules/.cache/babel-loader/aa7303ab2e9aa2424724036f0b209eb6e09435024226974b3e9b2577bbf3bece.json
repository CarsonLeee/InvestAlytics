{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carso\\\\OneDrive\\\\Desktop\\\\Projects\\\\Stock Analyzer\\\\frontend\\\\src\\\\Stock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\";\nimport \"./Stock.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from \"chart.js\";\nimport \"chartjs-adapter-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst timePeriods = [\"1d\", \"5d\", \"1m\", \"6m\", \"1y\", \"5y\", \"max\"];\nconst analysisOptions = [\"Simple Moving Average\", \"Exponential Moving Average\", \"Relative Strength Index\", \"Bollinger Bands\", \"MACD\", \"Stochastic Oscillator\", \"Fibonacci Retracement\"];\nconst Stock = ({\n  selectedStock\n}) => {\n  _s();\n  const [stockData, setStockData] = useState({\n    labels: [],\n    datasets: [{\n      label: `${selectedStock} Stock Price`,\n      data: [],\n      borderColor: \"rgba(75,192,192,1)\",\n      backgroundColor: \"rgba(75,192,192,0.5)\",\n      fill: false,\n      pointRadius: 3,\n      // Adjust point size\n      pointBackgroundColor: \"black\" // Black dots\n    }]\n  });\n  const [stockInfo, setStockInfo] = useState({\n    high: 0,\n    low: 0,\n    current: 0\n  });\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState(\"1m\");\n  const [tickerData, setTickerData] = useState([]); // State for ticker data\n\n  useEffect(() => {\n    const fetchTickerData = async () => {\n      const apiKey = \"pk_73eb7c2f76b14c34afa8f99215f526e6\";\n      const symbols = \"AAPL,MSFT,AMZN,GOOGL,FB,BABA,TSLA,V,JPM,JNJ,BRK.A,XOM,BAC,PG,WMT,DIS,VZ,PFE,CVX,KO,PEP,CSCO,MRK,INTC,CMCSA\";\n      const url = `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${symbols}&types=quote,previous&token=${apiKey}`;\n      try {\n        const response = await axios.get(url);\n        // Process and set the ticker data\n        // ...\n      } catch (error) {\n        console.error(\"Error fetching ticker data: \", error);\n      }\n    };\n    fetchTickerData();\n  }, []);\n  useEffect(() => {\n    const apiKey = \"pk_73eb7c2f76b14c34afa8f99215f526e6\";\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/${selectedTimePeriod}?token=${apiKey}`;\n    axios.get(url).then(response => {\n      if (response.data) {\n        const chartData = parseChartData(response.data);\n        setStockData(chartData);\n        const lastDayData = response.data[response.data.length - 1];\n        setStockInfo({\n          high: lastDayData.high,\n          low: lastDayData.low,\n          current: lastDayData.close\n        });\n      }\n    }).catch(error => console.error(\"Error fetching stock time series data: \", error));\n  }, [selectedStock, selectedTimePeriod]);\n  const parseChartData = data => {\n    const chartData = {\n      labels: [],\n      datasets: [{\n        label: `${selectedStock} Stock Price`,\n        data: [],\n        borderColor: \"rgba(75,192,192,1)\",\n        fill: false\n      }]\n    };\n    data.forEach(dayData => {\n      chartData.labels.push(dayData.date);\n      chartData.datasets[0].data.push(dayData.close);\n    });\n    return chartData;\n  };\n  const options = {\n    scales: {\n      x: {\n        type: \"time\",\n        time: {\n          unit: \"day\"\n        }\n      },\n      y: {\n        beginAtZero: true\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  const handleAnalysisOptionClick = async analysisType => {\n    if (analysisType === \"Simple Moving Average\") {\n      try {\n        const response = await axios.get(`http://localhost:3001/sma/${selectedStock}/${selectedTimePeriod}`);\n        alert(`Trend: ${response.data.trend}`); // Display trend\n      } catch (error) {\n        console.error(\"Error performing analysis:\", error);\n      }\n    } else if (analysisType === \"Exponential Moving Average\") {\n      try {\n        const response = await axios.get(`http://localhost:3001/ema/${selectedStock}/${selectedTimePeriod}`);\n        alert(`EMA Trend: ${response.data.trend}`); // Display EMA trend\n      } catch (error) {\n        console.error(\"Error performing EMA analysis:\", error);\n      }\n    } else if (analysisType === \"Relative Strength Index\") {\n      try {\n        const response = await axios.get(`http://localhost:3001/rsi/${selectedStock}/${selectedTimePeriod}`);\n        alert(`RSI Trend: ${response.data.trend}`); // Display RSI trend\n      } catch (error) {\n        console.error(\"Error performing RSI analysis:\", error);\n      }\n    } else if (analysisType === \"Bollinger Bands\") {\n      try {\n        const response = await axios.get(`http://localhost:3001/bollinger-bands/${selectedStock}/${selectedTimePeriod}`);\n        alert(`Bollinger Bands Trend: ${response.data.trend}`); // Display Bollinger Bands trend\n      } catch (error) {\n        console.error(\"Error performing Bollinger Bands analysis:\", error);\n      }\n    } else if (analysisType === \"MACD\") {\n      try {\n        const response = await axios.get(`http://localhost:3001/macd/${selectedStock}/${selectedTimePeriod}`);\n        alert(`MACD Trend: ${response.data.trend}`); // Display MACD trend\n      } catch (error) {\n        console.error(\"Error performing MACD analysis:\", error);\n      }\n    } else if (analysisType === \"Stochastic Oscillator\") {\n      try {\n        const response = await axios.get(`http://localhost:3001/stochastic/${selectedStock}/${selectedTimePeriod}`);\n        alert(`Stochastic Oscillator Trend: ${response.data.trend}`); // Display Stochastic Oscillator trend\n      } catch (error) {\n        console.error(\"Error performing Stochastic Oscillator analysis:\", error);\n      }\n    } else if (analysisType === \"Fibonacci Retracement\") {\n      try {\n        const response = await axios.get(`http://localhost:3001/fibonacci/${selectedStock}/${selectedTimePeriod}`);\n        alert(`Fibonacci Trend: ${response.data.trend}`); // Display trend based on Fibonacci levels\n      } catch (error) {\n        console.error(\"Error performing Fibonacci Retracement analysis:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: timePeriods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTimePeriod(period),\n        children: period.toUpperCase()\n      }, period, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"600px\",\n          height: \"300px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [selectedStock, \" Stock Chart\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), stockData.datasets[0].data.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n          data: stockData,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"High:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), \" \", stockInfo.high]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Low:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), \" \", stockInfo.low]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), \" \", stockInfo.current]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bullish:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), \" Buy Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bearish:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), \" Sell Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Neutral:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), \" Keep Stock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"80px\"\n      },\n      children: analysisOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnalysisOptionClick(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(Stock, \"bTSHjkpQ+2YLIOcfaOiry3+sdv0=\");\n_c = Stock;\nexport default Stock;\nvar _c;\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","timePeriods","analysisOptions","Stock","selectedStock","_s","stockData","setStockData","labels","datasets","label","data","borderColor","backgroundColor","fill","pointRadius","pointBackgroundColor","stockInfo","setStockInfo","high","low","current","selectedTimePeriod","setSelectedTimePeriod","tickerData","setTickerData","fetchTickerData","apiKey","symbols","url","response","get","error","console","then","chartData","parseChartData","lastDayData","length","close","catch","forEach","dayData","push","date","options","scales","x","type","time","unit","y","beginAtZero","responsive","maintainAspectRatio","handleAnalysisOptionClick","analysisType","alert","trend","style","display","flexDirection","justifyContent","alignItems","height","children","marginBottom","map","period","onClick","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","width","textAlign","marginLeft","padding","option","index","_c","$RefreshReg$"],"sources":["C:/Users/carso/OneDrive/Desktop/Projects/Stock Analyzer/frontend/src/Stock.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./Stock.css\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale,\r\n} from \"chart.js\";\r\nimport \"chartjs-adapter-moment\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale\r\n);\r\n\r\nconst timePeriods = [\"1d\", \"5d\", \"1m\", \"6m\", \"1y\", \"5y\", \"max\"];\r\nconst analysisOptions = [\r\n  \"Simple Moving Average\",\r\n  \"Exponential Moving Average\",\r\n  \"Relative Strength Index\",\r\n  \"Bollinger Bands\",\r\n  \"MACD\",\r\n  \"Stochastic Oscillator\",\r\n  \"Fibonacci Retracement\",\r\n];\r\n\r\nconst Stock = ({ selectedStock }) => {\r\n  const [stockData, setStockData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: `${selectedStock} Stock Price`,\r\n        data: [],\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        backgroundColor: \"rgba(75,192,192,0.5)\",\r\n        fill: false,\r\n        pointRadius: 3, // Adjust point size\r\n        pointBackgroundColor: \"black\", // Black dots\r\n      },\r\n    ],\r\n  });\r\n  const [stockInfo, setStockInfo] = useState({ high: 0, low: 0, current: 0 });\r\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState(\"1m\");\r\n  const [tickerData, setTickerData] = useState([]); // State for ticker data\r\n\r\n  useEffect(() => {\r\n    const fetchTickerData = async () => {\r\n      const apiKey = \"pk_73eb7c2f76b14c34afa8f99215f526e6\";\r\n      const symbols =\r\n        \"AAPL,MSFT,AMZN,GOOGL,FB,BABA,TSLA,V,JPM,JNJ,BRK.A,XOM,BAC,PG,WMT,DIS,VZ,PFE,CVX,KO,PEP,CSCO,MRK,INTC,CMCSA\";\r\n      const url = `https://cloud.iexapis.com/stable/stock/market/batch?symbols=${symbols}&types=quote,previous&token=${apiKey}`;\r\n\r\n      try {\r\n        const response = await axios.get(url);\r\n        // Process and set the ticker data\r\n        // ...\r\n      } catch (error) {\r\n        console.error(\"Error fetching ticker data: \", error);\r\n      }\r\n    };\r\n\r\n    fetchTickerData();\r\n  }, []);\r\n  useEffect(() => {\r\n    const apiKey = \"pk_73eb7c2f76b14c34afa8f99215f526e6\";\r\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/${selectedTimePeriod}?token=${apiKey}`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        if (response.data) {\r\n          const chartData = parseChartData(response.data);\r\n          setStockData(chartData);\r\n          const lastDayData = response.data[response.data.length - 1];\r\n          setStockInfo({\r\n            high: lastDayData.high,\r\n            low: lastDayData.low,\r\n            current: lastDayData.close,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) =>\r\n        console.error(\"Error fetching stock time series data: \", error)\r\n      );\r\n  }, [selectedStock, selectedTimePeriod]);\r\n\r\n  const parseChartData = (data) => {\r\n    const chartData = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: `${selectedStock} Stock Price`,\r\n          data: [],\r\n          borderColor: \"rgba(75,192,192,1)\",\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n\r\n    data.forEach((dayData) => {\r\n      chartData.labels.push(dayData.date);\r\n      chartData.datasets[0].data.push(dayData.close);\r\n    });\r\n\r\n    return chartData;\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: \"time\",\r\n        time: {\r\n          unit: \"day\",\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  const handleAnalysisOptionClick = async (analysisType) => {\r\n    if (analysisType === \"Simple Moving Average\") {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/sma/${selectedStock}/${selectedTimePeriod}`\r\n        );\r\n        alert(`Trend: ${response.data.trend}`); // Display trend\r\n      } catch (error) {\r\n        console.error(\"Error performing analysis:\", error);\r\n      }\r\n    } else if (analysisType === \"Exponential Moving Average\") {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/ema/${selectedStock}/${selectedTimePeriod}`\r\n        );\r\n        alert(`EMA Trend: ${response.data.trend}`); // Display EMA trend\r\n      } catch (error) {\r\n        console.error(\"Error performing EMA analysis:\", error);\r\n      }\r\n    } else if (analysisType === \"Relative Strength Index\") {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/rsi/${selectedStock}/${selectedTimePeriod}`\r\n        );\r\n        alert(`RSI Trend: ${response.data.trend}`); // Display RSI trend\r\n      } catch (error) {\r\n        console.error(\"Error performing RSI analysis:\", error);\r\n      }\r\n    } else if (analysisType === \"Bollinger Bands\") {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/bollinger-bands/${selectedStock}/${selectedTimePeriod}`\r\n        );\r\n        alert(`Bollinger Bands Trend: ${response.data.trend}`); // Display Bollinger Bands trend\r\n      } catch (error) {\r\n        console.error(\"Error performing Bollinger Bands analysis:\", error);\r\n      }\r\n    } else if (analysisType === \"MACD\") {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/macd/${selectedStock}/${selectedTimePeriod}`\r\n        );\r\n        alert(`MACD Trend: ${response.data.trend}`); // Display MACD trend\r\n      } catch (error) {\r\n        console.error(\"Error performing MACD analysis:\", error);\r\n      }\r\n    } else if (analysisType === \"Stochastic Oscillator\") {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/stochastic/${selectedStock}/${selectedTimePeriod}`\r\n        );\r\n        alert(`Stochastic Oscillator Trend: ${response.data.trend}`); // Display Stochastic Oscillator trend\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error performing Stochastic Oscillator analysis:\",\r\n          error\r\n        );\r\n      }\r\n    } else if (analysisType === \"Fibonacci Retracement\") {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/fibonacci/${selectedStock}/${selectedTimePeriod}`\r\n        );\r\n        alert(`Fibonacci Trend: ${response.data.trend}`); // Display trend based on Fibonacci levels\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error performing Fibonacci Retracement analysis:\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        {timePeriods.map((period) => (\r\n          <button key={period} onClick={() => setSelectedTimePeriod(period)}>\r\n            {period.toUpperCase()}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"flex-start\",\r\n        }}\r\n      >\r\n        <div style={{ width: \"600px\", height: \"300px\" }}>\r\n          <h2 style={{ textAlign: \"center\" }}>{selectedStock} Stock Chart</h2>\r\n          {stockData.datasets[0].data.length > 0 && (\r\n            <Line data={stockData} options={options} />\r\n          )}\r\n        </div>\r\n        <div style={{ marginLeft: \"20px\" }}>\r\n          <p>\r\n            <strong>High:</strong> {stockInfo.high}\r\n          </p>\r\n          <p>\r\n            <strong>Low:</strong> {stockInfo.low}\r\n          </p>\r\n          <p>\r\n            <strong>Current:</strong> {stockInfo.current}\r\n          </p>\r\n          <p>\r\n            <strong>Bullish:</strong> Buy Stock\r\n          </p>\r\n          <p>\r\n            <strong>Bearish:</strong> Sell Stock\r\n          </p>\r\n          <p>\r\n            <strong>Neutral:</strong> Keep Stock\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", padding: \"80px\" }}\r\n      >\r\n        {analysisOptions.map((option, index) => (\r\n          <button key={index} onClick={() => handleAnalysisOptionClick(option)}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}