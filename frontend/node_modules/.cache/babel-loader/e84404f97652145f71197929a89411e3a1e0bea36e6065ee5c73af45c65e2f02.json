{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carso\\\\OneDrive\\\\Desktop\\\\Projects\\\\Stock Analyzer\\\\frontend\\\\src\\\\FavoriteStock.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoriteStock = ({\n  symbol\n}) => {\n  _s();\n  const [stockData, setStockData] = useState({\n    high: 0,\n    low: 0,\n    current: 0,\n    chartData: {}\n  });\n  useEffect(() => {\n    const fetchStockData = async () => {\n      const apiKey = \"pk_302c7bd6ee464d738f364961b88569ee\"; // Use your API key\n      const chartUrl = `https://cloud.iexapis.com/stable/stock/${symbol}/chart/1m?token=${apiKey}`;\n      const quoteUrl = `https://cloud.iexapis.com/stable/stock/${symbol}/quote?token=${apiKey}`;\n      try {\n        // Fetching stock chart data\n        const chartResponse = await axios.get(chartUrl);\n        const chartData = chartResponse.data.map(data => ({\n          x: data.date,\n          y: data.close\n        }));\n\n        // Fetching stock quote data\n        const quoteResponse = await axios.get(quoteUrl);\n        const {\n          high,\n          low,\n          latestPrice: current\n        } = quoteResponse.data;\n\n        // Update state\n        setStockData({\n          high,\n          low,\n          current,\n          chartData: {\n            labels: chartData.map(data => data.x),\n            datasets: [{\n              label: `${symbol} Price`,\n              data: chartData.map(data => data.y),\n              borderColor: \"rgba(75,192,192,1)\",\n              backgroundColor: \"rgba(75,192,192,0.5)\",\n              fill: false\n            }]\n          }\n        });\n      } catch (error) {\n        console.error(\"Error fetching stock data: \", error);\n      }\n    };\n    fetchStockData();\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"favorite-stock-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: stockData.chartData /* Options and other props */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"High: \", stockData.high]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Low: \", stockData.low]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current: \", stockData.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteStock, \"idjIe1+JT79+QZwedO/4lS3/Xd0=\");\n_c = FavoriteStock;\nexport default FavoriteStock;\nvar _c;\n$RefreshReg$(_c, \"FavoriteStock\");","map":{"version":3,"names":["FavoriteStock","symbol","_s","stockData","setStockData","useState","high","low","current","chartData","useEffect","fetchStockData","apiKey","chartUrl","quoteUrl","chartResponse","axios","get","data","map","x","date","y","close","quoteResponse","latestPrice","labels","datasets","label","borderColor","backgroundColor","fill","error","console","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Line","_c","$RefreshReg$"],"sources":["C:/Users/carso/OneDrive/Desktop/Projects/Stock Analyzer/frontend/src/FavoriteStock.js"],"sourcesContent":["const FavoriteStock = ({ symbol }) => {\r\n    const [stockData, setStockData] = useState({ high: 0, low: 0, current: 0, chartData: {} });\r\n  \r\n    useEffect(() => {\r\n      const fetchStockData = async () => {\r\n        const apiKey = \"pk_302c7bd6ee464d738f364961b88569ee\"; // Use your API key\r\n        const chartUrl = `https://cloud.iexapis.com/stable/stock/${symbol}/chart/1m?token=${apiKey}`;\r\n        const quoteUrl = `https://cloud.iexapis.com/stable/stock/${symbol}/quote?token=${apiKey}`;\r\n  \r\n        try {\r\n          // Fetching stock chart data\r\n          const chartResponse = await axios.get(chartUrl);\r\n          const chartData = chartResponse.data.map(data => ({ x: data.date, y: data.close }));\r\n  \r\n          // Fetching stock quote data\r\n          const quoteResponse = await axios.get(quoteUrl);\r\n          const { high, low, latestPrice: current } = quoteResponse.data;\r\n  \r\n          // Update state\r\n          setStockData({\r\n            high,\r\n            low,\r\n            current,\r\n            chartData: {\r\n              labels: chartData.map(data => data.x),\r\n              datasets: [{\r\n                label: `${symbol} Price`,\r\n                data: chartData.map(data => data.y),\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                backgroundColor: \"rgba(75,192,192,0.5)\",\r\n                fill: false,\r\n              }]\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error fetching stock data: \", error);\r\n        }\r\n      };\r\n  \r\n      fetchStockData();\r\n    }, [symbol]);\r\n\r\n  return (\r\n    <div className=\"favorite-stock-container\">\r\n      <h3>{symbol}</h3>\r\n      <Line data={stockData.chartData} /* Options and other props */ />\r\n      <p>High: {stockData.high}</p>\r\n      <p>Low: {stockData.low}</p>\r\n      <p>Current: {stockData.current}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteStock;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}