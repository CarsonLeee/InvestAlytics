{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carso\\\\OneDrive\\\\Desktop\\\\Projects\\\\Stock Analyzer\\\\frontend\\\\src\\\\Stock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst timePeriods = ['1d', '5d', '1m', '6m', '1y', '5y', 'max'];\nconst analysisOptions = ['Option 1', 'Option 2', 'Option 3'];\nconst Stock = ({\n  selectedStock\n}) => {\n  _s();\n  const [stockData, setStockData] = useState({\n    labels: [],\n    datasets: [{\n      label: `${selectedStock} Stock Price`,\n      data: [],\n      borderColor: 'rgba(75,192,192,1)',\n      backgroundColor: 'rgba(75,192,192,0.5)',\n      fill: false,\n      pointRadius: 3,\n      // Adjust point size\n      pointBackgroundColor: 'black' // Black dots\n    }]\n  });\n  const [stockInfo, setStockInfo] = useState({\n    high: 0,\n    low: 0,\n    current: 0\n  });\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState('1m');\n  useEffect(() => {\n    const apiKey = 'pk_73eb7c2f76b14c34afa8f99215f526e6';\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/${selectedTimePeriod}?token=${apiKey}`;\n    axios.get(url).then(response => {\n      if (response.data) {\n        const chartData = parseChartData(response.data);\n        setStockData(chartData);\n        const lastDayData = response.data[response.data.length - 1];\n        setStockInfo({\n          high: lastDayData.high,\n          low: lastDayData.low,\n          current: lastDayData.close\n        });\n      }\n    }).catch(error => console.error(\"Error fetching stock time series data: \", error));\n  }, [selectedStock, selectedTimePeriod]);\n  const parseChartData = data => {\n    const chartData = {\n      labels: [],\n      datasets: [{\n        label: `${selectedStock} Stock Price`,\n        data: [],\n        borderColor: 'rgba(75,192,192,1)',\n        fill: false\n      }]\n    };\n    data.forEach(dayData => {\n      chartData.labels.push(dayData.date);\n      chartData.datasets[0].data.push(dayData.close);\n    });\n    return chartData;\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day'\n        }\n      },\n      y: {\n        beginAtZero: true\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  const handleAnalysisOptionClick = option => {\n    // Mock data for analysis options\n    const newDataset = {\n      label: `Analysis ${option}`,\n      data: stockData.datasets[0].data.map(d => d * (0.95 + Math.random() * 0.1)),\n      // Mock data\n      borderColor: `rgba(0,0,0,${Math.random()})`,\n      // Random color\n      fill: false,\n      pointRadius: 3,\n      pointBackgroundColor: 'black'\n    };\n    setStockData(prevData => ({\n      ...prevData,\n      datasets: [...prevData.datasets, newDataset]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '600px',\n        height: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [selectedStock, \" Stock Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '10px'\n        },\n        children: timePeriods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedTimePeriod(period),\n          children: period.toUpperCase()\n        }, period, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), stockData.datasets[0].data.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n        data: stockData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        children: analysisOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnalysisOptionClick(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"High:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 12\n        }, this), \" \", stockInfo.high]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Low:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }, this), \" \", stockInfo.low]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 12\n        }, this), \" \", stockInfo.current]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Stock, \"tUAMwZMTTDTkYb9BN10DhUj11YM=\");\n_c = Stock;\nexport default Stock;\nvar _c;\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","timePeriods","analysisOptions","Stock","selectedStock","_s","stockData","setStockData","labels","datasets","label","data","borderColor","backgroundColor","fill","pointRadius","pointBackgroundColor","stockInfo","setStockInfo","high","low","current","selectedTimePeriod","setSelectedTimePeriod","apiKey","url","get","then","response","chartData","parseChartData","lastDayData","length","close","catch","error","console","forEach","dayData","push","date","options","scales","x","type","time","unit","y","beginAtZero","responsive","maintainAspectRatio","handleAnalysisOptionClick","option","newDataset","map","d","Math","random","prevData","style","display","justifyContent","alignItems","marginTop","children","width","height","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","period","onClick","toUpperCase","index","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/carso/OneDrive/Desktop/Projects/Stock Analyzer/frontend/src/Stock.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\r\nimport 'chartjs-adapter-moment';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale\r\n);\r\n\r\nconst timePeriods = ['1d', '5d', '1m', '6m', '1y', '5y', 'max'];\r\nconst analysisOptions = ['Option 1', 'Option 2', 'Option 3'];\r\n\r\nconst Stock = ({ selectedStock }) => {\r\n  const [stockData, setStockData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: `${selectedStock} Stock Price`,\r\n        data: [],\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        backgroundColor: 'rgba(75,192,192,0.5)',\r\n        fill: false,\r\n        pointRadius: 3, // Adjust point size\r\n        pointBackgroundColor: 'black', // Black dots\r\n      }\r\n    ]\r\n  });\r\n  const [stockInfo, setStockInfo] = useState({ high: 0, low: 0, current: 0 });\r\n  const [selectedTimePeriod, setSelectedTimePeriod] = useState('1m');\r\n\r\n  useEffect(() => {\r\n    const apiKey = 'pk_73eb7c2f76b14c34afa8f99215f526e6';\r\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/${selectedTimePeriod}?token=${apiKey}`;\r\n\r\n    axios.get(url)\r\n      .then(response => {\r\n        if (response.data) {\r\n          const chartData = parseChartData(response.data);\r\n          setStockData(chartData);\r\n          const lastDayData = response.data[response.data.length - 1];\r\n          setStockInfo({\r\n            high: lastDayData.high,\r\n            low: lastDayData.low,\r\n            current: lastDayData.close\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error fetching stock time series data: \", error));\r\n  }, [selectedStock, selectedTimePeriod]);\r\n\r\n  const parseChartData = (data) => {\r\n    const chartData = {\r\n      labels: [],\r\n      datasets: [{\r\n        label: `${selectedStock} Stock Price`,\r\n        data: [],\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        fill: false,\r\n      }]\r\n    };\r\n\r\n    data.forEach(dayData => {\r\n      chartData.labels.push(dayData.date);\r\n      chartData.datasets[0].data.push(dayData.close);\r\n    });\r\n\r\n    return chartData;\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        time: {\r\n          unit: 'day'\r\n        }\r\n      },\r\n      y: {\r\n        beginAtZero: true\r\n      }\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n  const handleAnalysisOptionClick = (option) => {\r\n    // Mock data for analysis options\r\n    const newDataset = {\r\n      label: `Analysis ${option}`,\r\n      data: stockData.datasets[0].data.map(d => d * (0.95 + Math.random() * 0.1)), // Mock data\r\n      borderColor: `rgba(0,0,0,${Math.random()})`, // Random color\r\n      fill: false,\r\n      pointRadius: 3,\r\n      pointBackgroundColor: 'black',\r\n    };\r\n\r\n    setStockData(prevData => ({\r\n      ...prevData,\r\n      datasets: [...prevData.datasets, newDataset]\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '20px' }}>\r\n      <div style={{ width: '600px', height: '300px' }}>\r\n        <h2 style={{ textAlign: 'center' }}>{selectedStock} Stock Chart</h2>\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\r\n          {timePeriods.map(period => (\r\n            <button key={period} onClick={() => setSelectedTimePeriod(period)}>{period.toUpperCase()}</button>\r\n          ))}\r\n        </div>\r\n        {stockData.datasets[0].data.length > 0 && (\r\n          <Line data={stockData} options={options} />\r\n        )}\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n          {analysisOptions.map((option, index) => (\r\n            <button key={index} onClick={() => handleAnalysisOptionClick(option)}>{option}</button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={{ marginLeft: '20px' }}>\r\n        <p><strong>High:</strong> {stockInfo.high}</p>\r\n        <p><strong>Low:</strong> {stockInfo.low}</p>\r\n        <p><strong>Current:</strong> {stockInfo.current}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stock;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}