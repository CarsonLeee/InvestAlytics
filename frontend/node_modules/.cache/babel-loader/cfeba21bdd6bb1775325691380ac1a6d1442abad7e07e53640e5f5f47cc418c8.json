{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carso\\\\OneDrive\\\\Desktop\\\\Projects\\\\Stock Analyzer\\\\frontend\\\\src\\\\Stock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stock = ({\n  selectedStock\n}) => {\n  _s();\n  const [stockData, setStockData] = useState({\n    labels: [],\n    datasets: [{\n      label: '',\n      data: [],\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false\n    }]\n  });\n  useEffect(() => {\n    const apiKey = 'pk_73eb7c2f76b14c34afa8f99215f526e6'; // Replace with your IEX Cloud API Key\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/1m?token=${apiKey}`;\n    axios.get(url).then(response => {\n      if (response.data) {\n        const chartData = parseChartData(response.data);\n        setStockData(chartData);\n      }\n    }).catch(error => console.error(\"Error fetching stock time series data: \", error));\n  }, [selectedStock]);\n  const parseChartData = data => {\n    const chartData = {\n      labels: [],\n      datasets: [{\n        label: `${selectedStock} Stock Price`,\n        data: [],\n        borderColor: 'rgba(75,192,192,1)',\n        fill: false\n      }]\n    };\n    data.forEach(dayData => {\n      chartData.labels.push(dayData.date);\n      chartData.datasets[0].data.push(dayData.close);\n    });\n    return chartData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [selectedStock, \" Stock Chart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), stockData.datasets[0].data.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: stockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Stock, \"cqa7Ej2XUyjuOFZCb9hSggUCIwo=\");\n_c = Stock;\nexport default Stock;\nvar _c;\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","Stock","selectedStock","_s","stockData","setStockData","labels","datasets","label","data","borderColor","fill","apiKey","url","get","then","response","chartData","parseChartData","catch","error","console","forEach","dayData","push","date","close","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/carso/OneDrive/Desktop/Projects/Stock Analyzer/frontend/src/Stock.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Stock = ({ selectedStock }) => {\r\n  const [stockData, setStockData] = useState({\r\n    labels: [],\r\n    datasets: [{ label: '', data: [], borderColor: 'rgba(75,192,192,1)', fill: false }]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const apiKey = 'pk_73eb7c2f76b14c34afa8f99215f526e6'; // Replace with your IEX Cloud API Key\r\n    const url = `https://cloud.iexapis.com/stable/stock/${selectedStock}/chart/1m?token=${apiKey}`;\r\n\r\n    axios.get(url)\r\n      .then(response => {\r\n        if (response.data) {\r\n          const chartData = parseChartData(response.data);\r\n          setStockData(chartData);\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error fetching stock time series data: \", error));\r\n  }, [selectedStock]);\r\n\r\n  const parseChartData = (data) => {\r\n    const chartData = {\r\n      labels: [],\r\n      datasets: [{\r\n        label: `${selectedStock} Stock Price`,\r\n        data: [],\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        fill: false,\r\n      }]\r\n    };\r\n\r\n    data.forEach(dayData => {\r\n      chartData.labels.push(dayData.date);\r\n      chartData.datasets[0].data.push(dayData.close);\r\n    });\r\n\r\n    return chartData;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{selectedStock} Stock Chart</h2>\r\n      {stockData.datasets[0].data.length > 0 ? (\r\n        <Line data={stockData} />\r\n      ) : (\r\n        <p>Loading chart data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IACzCW,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,WAAW,EAAE,oBAAoB;MAAEC,IAAI,EAAE;IAAM,CAAC;EACpF,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAG,qCAAqC,CAAC,CAAC;IACtD,MAAMC,GAAG,GAAI,0CAAyCX,aAAc,mBAAkBU,MAAO,EAAC;IAE9Ff,KAAK,CAACiB,GAAG,CAACD,GAAG,CAAC,CACXE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACP,IAAI,EAAE;QACjB,MAAMQ,SAAS,GAAGC,cAAc,CAACF,QAAQ,CAACP,IAAI,CAAC;QAC/CJ,YAAY,CAACY,SAAS,CAAC;MACzB;IACF,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC,CAAC;EACpF,CAAC,EAAE,CAAClB,aAAa,CAAC,CAAC;EAEnB,MAAMgB,cAAc,GAAIT,IAAI,IAAK;IAC/B,MAAMQ,SAAS,GAAG;MAChBX,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,CAAC;QACTC,KAAK,EAAG,GAAEN,aAAc,cAAa;QACrCO,IAAI,EAAE,EAAE;QACRC,WAAW,EAAE,oBAAoB;QACjCC,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IAEDF,IAAI,CAACa,OAAO,CAACC,OAAO,IAAI;MACtBN,SAAS,CAACX,MAAM,CAACkB,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC;MACnCR,SAAS,CAACV,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAACe,IAAI,CAACD,OAAO,CAACG,KAAK,CAAC;IAChD,CAAC,CAAC;IAEF,OAAOT,SAAS;EAClB,CAAC;EAED,oBACEjB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,GAAKzB,aAAa,EAAC,cAAY;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnC3B,SAAS,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAACuB,MAAM,GAAG,CAAC,gBACpChC,OAAA,CAACF,IAAI;MAACW,IAAI,EAAEL;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzB/B,OAAA;MAAA2B,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAjDIF,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAmDX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}