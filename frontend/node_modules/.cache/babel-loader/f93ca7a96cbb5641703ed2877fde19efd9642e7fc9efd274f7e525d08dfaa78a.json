{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carso\\\\OneDrive\\\\Desktop\\\\Projects\\\\Stock Analyzer\\\\frontend\\\\src\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = ({\n  navigateTo\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (newPassword !== confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      // Send a POST request to the reset-password endpoint\n      await axios.post(\"http://localhost:3001/reset-password\", {\n        email,\n        newPassword\n      });\n      alert('Password reset successfully');\n      navigateTo('login'); // Navigate back to the login page\n    } catch (error) {\n      if (error.response && error.response.data) {\n        alert(error.response.data);\n      } else {\n        alert('An error occurred during password reset');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      placeholder: \"New Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      placeholder: \"Confirm Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => navigateTo('login'),\n      children: \"Back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"5wdvDksLWRlniVnXdWe8RvejY40=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgotPassword","navigateTo","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handleSubmit","event","preventDefault","alert","post","error","response","data","onSubmit","children","type","value","onChange","e","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/carso/OneDrive/Desktop/Projects/Stock Analyzer/frontend/src/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\n\r\nconst ForgotPassword = ({ navigateTo }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send a POST request to the reset-password endpoint\r\n      await axios.post(\"http://localhost:3001/reset-password\", { email, newPassword });\r\n      alert('Password reset successfully');\r\n      navigateTo('login'); // Navigate back to the login page\r\n    } catch (error) {\r\n      if (error.response && error.response.data) {\r\n        alert(error.response.data);\r\n      } else {\r\n        alert('An error occurred during password reset');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n      <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} placeholder=\"New Password\" required />\r\n      <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm Password\" required />\r\n      <button type=\"submit\">Reset Password</button>\r\n      <button type=\"button\" onClick={() => navigateTo('login')}>Back to Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}