{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carso\\\\OneDrive\\\\Desktop\\\\Projects\\\\Stock Analyzer\\\\frontend\\\\src\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [stockOptions, setStockOptions] = useState([]);\n  useEffect(() => {\n    if (searchTerm) {\n      // Replace with your API request\n      axios.get(`YOUR_STOCK_API_URL?search=${searchTerm}`).then(response => {\n        // Assuming response contains an array of stocks\n        setStockOptions(response.data);\n      }).catch(error => console.error(\"Error fetching data: \", error));\n    } else {\n      setStockOptions([]);\n    }\n  }, [searchTerm]); // Run the effect on searchTerm change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search for a stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), stockOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stockOptions.map((stock, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [stock.name, \" - \", stock.symbol]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this) // Customize as per your API response\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"XjrU9GJJ8+mbcNO2oisTpFg3X2A=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","stockOptions","setStockOptions","get","then","response","data","catch","error","console","children","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","map","stock","index","name","symbol","_c","$RefreshReg$"],"sources":["C:/Users/carso/OneDrive/Desktop/Projects/Stock Analyzer/frontend/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Search = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [stockOptions, setStockOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (searchTerm) {\r\n      // Replace with your API request\r\n      axios.get(`YOUR_STOCK_API_URL?search=${searchTerm}`)\r\n        .then(response => {\r\n          // Assuming response contains an array of stocks\r\n          setStockOptions(response.data);\r\n        })\r\n        .catch(error => console.error(\"Error fetching data: \", error));\r\n    } else {\r\n      setStockOptions([]);\r\n    }\r\n  }, [searchTerm]); // Run the effect on searchTerm change\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <input \r\n          type=\"text\" \r\n          value={searchTerm} \r\n          onChange={(e) => setSearchTerm(e.target.value)} \r\n          placeholder=\"Search for a stock\" \r\n        />\r\n      </form>\r\n      {stockOptions.length > 0 && (\r\n        <ul>\r\n          {stockOptions.map((stock, index) => (\r\n            <li key={index}>{stock.name} - {stock.symbol}</li> // Customize as per your API response\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,IAAIM,UAAU,EAAE;MACd;MACAL,KAAK,CAACS,GAAG,CAAE,6BAA4BJ,UAAW,EAAC,CAAC,CACjDK,IAAI,CAACC,QAAQ,IAAI;QAChB;QACAH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC;MAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IAClE,CAAC,MAAM;MACLN,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,oBACEH,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAMe,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;MAAAH,QAAA,eACxCd,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhB,UAAW;QAClBiB,QAAQ,EAAGJ,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;QAC/CG,WAAW,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACNrB,YAAY,CAACsB,MAAM,GAAG,CAAC,iBACtB3B,OAAA;MAAAc,QAAA,EACGT,YAAY,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC7B9B,OAAA;QAAAc,QAAA,GAAiBe,KAAK,CAACE,IAAI,EAAC,KAAG,EAACF,KAAK,CAACG,MAAM;MAAA,GAAnCF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAAC,CAAC;MACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}